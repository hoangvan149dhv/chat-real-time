name: Build Laravel
on:
  push:
    branches: [ master ]
jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    services:
      nginx:
        image: nginx:alpine
        ports:
          - 80/tcp
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'root'
          MYSQL_DATABASE: 'chat'
          MYSQL_USER: 'homestead'
          MYSQL_PASSWORD: 'secret'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
    steps:
      - name: Checkout
        uses: actions/checkout@v2 #Sync source code form repo
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug #optional
      - name: Check nginx status
        run:  sudo systemctl restart nginx
      - name: Start mysql service
        run: sudo /etc/init.d/mysql start
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
#       - name: Cache composer dependencies
#         uses: actions/cache@v2
#         with:
#           path: ${{ steps.composercache.outputs.dir }}
#           # Use composer.json for key, if composer.lock is not committed.
#           # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
#           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#           restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Copy Env File
        run: cp .env.example .env
      - name: Migrate Test Database
        run: |
          php artisan migrate
          php artisan db:seed --class=DatabaseSeeder
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      - name: Change Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      # - name: Static Analysis via PHPStan
      #   run: ./vendor/bin/phpstan analyse --memory-limit=2G
      # - name: Execute tests (Unit and Feature tests) via PHPUnit
      #   run: vendor/bin/phpunit
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
      - uses: actions/setup-node@v2
        with:
          node-version: '10'
      - name: Install npm dependencies
        run: npm install
      - run: npm run prod
#       - name: Run build task
#         run: npm test
#       - name: Deploy to Server
#         uses: easingthemes/ssh-deploy@main
#         env:
#             SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#             ARGS: "-rltgoDzvO --delete"
#             SOURCE: "dist/"
#             REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
#             REMOTE_USER: ${{ secrets.REMOTE_USER }}
#             TARGET: ${{ secrets.REMOTE_TARGET }}
